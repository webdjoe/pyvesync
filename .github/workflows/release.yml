name: Release
# Controls when the workflow will run
on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Gets semantic release info
              id: semantic_release_info
              uses: jossef/action-semantic-release-info@v3.0.0
              env:
                  GITHUB_TOKEN: ${{ github.token }}
            - name: Update Version and Commit
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              run: |
                  echo "Version: ${{steps.semantic_release_info.outputs.version}}"
                  sed -i "s/version = \".*\",/version = \"${{steps.semantic_release_info.outputs.version}}\",/g" pyproject.toml
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add -A
                  git commit -m "chore: bumping version to ${{steps.semantic_release_info.outputs.version}}"
                  git tag ${{ steps.semantic_release_info.outputs.git_tag }}
            - name: Push changes
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              uses: ad-m/github-push-action@v0.8.0
              with:
                  github_token: ${{ github.token }}
                  tags: true
            - name: Create GitHub Release
              if: ${{ steps.semantic_release_info.outputs.version != '' }}
              uses: softprops/action-gh-release@v2
              with:
                tag_name: ${{ steps.semantic_release_info.outputs.git_tag }}
                name: ${{ steps.semantic_release_info.outputs.git_tag }}
                body: ${{ steps.semantic_release_info.outputs.notes }}
                draft: false
                prerelease: false
              env:
                GITHUB_TOKEN: ${{ github.token }}
            - name: Install dependencies
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              run: |
                  python -m pip install --upgrade pip
                  pip install build
            - name: Build package
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              run: python -m build
            - name: Publish package to PyPi Test
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.TEST_PYPI_API_TOKEN }}
                  repository_url: https://test.pypi.org/legacy/
            - name: Publish package to PyPi Live
              if: ${{steps.semantic_release_info.outputs.version != ''}}
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_API_TOKEN }}
